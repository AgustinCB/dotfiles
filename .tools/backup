#!/bin/bash

set -xeuo pipefail

USAGE="Usage: backup [base|incremental] [btrfs root path]"
cmd=${1:?$USAGE}
btrfs_location=${2:?$USAGE}

send_base_subvolume () {
  date=$(date +%Y%m%d%H%M)
  subvolume=${1:?First parameter is subvolume}
  path="$btrfs_location/__current/$subvolume"
  backup="$btrfs_location/__snapshot/$subvolume"_"$date"
  btrfs subvolume snapshot -r "$path" "$backup"
  sync "$btrfs_location"
  btrfs send "$backup" | ssh pi@backup-server "sudo btrfs receive /mnt/__snapshots"
  btrfs subvolume delete "$backup"
  sync "$btrfs_location"
}

send_incremental_subvolume () {
  subvolume=${1:?First parameter is subvolume}
  date=$(date +%Y%m%d%H%M)
  path="$btrfs_location/__current/$subvolume"
  backup="$btrfs_location/__snapshot/$subvolume"_"$date"
  parent=$(ls "$btrfs_location/__snapshot" | grep "$subvolume" | sort | tail -n 1)
  parent_path="$btrfs_location/__snapshot/$parent"
  btrfs subvolume snapshot -r "$path" "$backup"
  sync "$btrfs_location"
  btrfs send -p "$parent_path"  "$backup" | ssh pi@backup-server "sudo btrfs receive /mnt/__snapshots"
  btrfs subvolume delete "$parent_path"
  sync "$btrfs_location"
}

subvolumes="ROOT opt home var"
for subvolume in $subvolumes; do
  if [ "$cmd" == "base" ]; then
    send_base_subvolume $subvolume
  else
    send_incremental_subvolume $subvolume
  fi
done
